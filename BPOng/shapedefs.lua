-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["DinoKnight2"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "DinoKnight", density = 1000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 1 },
                    shape = {   -7, -18  ,  -25, -13  ,  -23, -20  ,  -10, -27  }
                    }
                     ,
                    {
                    pe_fixture_id = "DinoKnight", density = 1000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 1 },
                    shape = {   19, 23  ,  -2, 28  ,  -14, 28  ,  -25, -13  ,  7, -5  ,  22, 7  ,  25, 16  }
                    }
                     ,
                    {
                    pe_fixture_id = "DinoKnight", density = 1000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 1 },
                    shape = {   7, -5  ,  -25, -13  ,  -7, -18  ,  2, -18  }
                    }
                    
                    
                    
		}
		
		, 
		["DinoWest2"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "DinoWest", density = 1000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 1 },
                    shape = {   7, 27.5  ,  -18, 23.5  ,  -24, 15.5  ,  -25, 6.5  ,  -14, -3.5  ,  18, 13.5  ,  18, 26.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "DinoWest", density = 1000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 1 },
                    shape = {   -6, -25.5  ,  11, -26.5  ,  23, -15.5  ,  18, 13.5  ,  -14, -3.5  ,  -18, -14.5  }
                    }
                    
                    
                    
		}
		
		, 
		["egg2"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "Egg", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 2, maskBits = 65535, groupIndex = 2 },
                    shape = {   -10, -3.5  ,  -7, -9.5  ,  10, -3.5  ,  10, 6.5  ,  5, 11.5  ,  -7, 11.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "Egg", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 2, maskBits = 65535, groupIndex = 2 },
                    shape = {   10, -3.5  ,  -7, -9.5  ,  4, -11.5  }
                    }
                    
                    
                    
		}
		
		, 
		["eggwest2"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "EggWest", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 2, maskBits = 65535, groupIndex = 2 },
                    shape = {   -10, -3.5  ,  -7, -9.5  ,  10, 6.5  ,  6, 11.5  ,  -7, 11.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "EggWest", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 2, maskBits = 65535, groupIndex = 2 },
                    shape = {   10, -3.5  ,  10, 6.5  ,  -7, -9.5  ,  4, -11.5  }
                    }
                    
                    
                    
		}
		
		, 
		["DinoViking"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   20, -13.5  ,  -6, 27.5  ,  -25, 17.5  ,  -25, 7.5  ,  0, -25.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -6, 27.5  ,  20, -13.5  ,  24, -17.5  ,  13, 27.5  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

